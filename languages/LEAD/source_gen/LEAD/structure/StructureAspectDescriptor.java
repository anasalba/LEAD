package LEAD.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAttributeDefinition = createDescriptorForAttributeDefinition();
  /*package*/ final ConceptDescriptor myConceptAttributeList = createDescriptorForAttributeList();
  /*package*/ final ConceptDescriptor myConceptCheck = createDescriptorForCheck();
  /*package*/ final ConceptDescriptor myConceptEnrich = createDescriptorForEnrich();
  /*package*/ final ConceptDescriptor myConceptQuery = createDescriptorForQuery();
  /*package*/ final ConceptDescriptor myConceptSelect = createDescriptorForSelect();
  /*package*/ final ConceptDescriptor myConceptStreamDefinition = createDescriptorForStreamDefinition();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAttributeDefinition, myConceptAttributeList, myConceptCheck, myConceptEnrich, myConceptQuery, myConceptSelect, myConceptStreamDefinition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AttributeDefinition:
        return myConceptAttributeDefinition;
      case LanguageConceptSwitch.AttributeList:
        return myConceptAttributeList;
      case LanguageConceptSwitch.Check:
        return myConceptCheck;
      case LanguageConceptSwitch.Enrich:
        return myConceptEnrich;
      case LanguageConceptSwitch.Query:
        return myConceptQuery;
      case LanguageConceptSwitch.Select:
        return myConceptSelect;
      case LanguageConceptSwitch.StreamDefinition:
        return myConceptStreamDefinition;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAttributeDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LEAD", "AttributeDefinition", 0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0x4d5ca23b0aeaecefL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d1327b1c-416a-4135-aab6-1491ee7f8037(LEAD.structure)/5574508813247769839");
    b.version(2);
    b.aggregate("type", 0x4d5ca23b0aeaed17L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L).optional(false).ordered(true).multiple(false).origin("5574508813247769879").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LEAD", "AttributeList", 0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0x4d5ca23b0aeaecdeL);
    b.class_(false, false, false);
    b.origin("r:d1327b1c-416a-4135-aab6-1491ee7f8037(LEAD.structure)/5574508813247769822");
    b.version(2);
    b.aggregate("attribute", 0x4d5ca23b0aeaecdfL).target(0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0x4d5ca23b0aeaecefL).optional(true).ordered(true).multiple(true).origin("5574508813247769823").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCheck() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LEAD", "Check", 0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0xe01c95e890f4233L);
    b.class_(false, false, false);
    b.origin("r:d1327b1c-416a-4135-aab6-1491ee7f8037(LEAD.structure)/1009309199371289139");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnrich() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LEAD", "Enrich", 0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0xe01c95e890f4231L);
    b.class_(false, false, false);
    b.origin("r:d1327b1c-416a-4135-aab6-1491ee7f8037(LEAD.structure)/1009309199371289137");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQuery() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LEAD", "Query", 0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0xe01c95e890f4209L);
    b.class_(false, false, true);
    b.origin("r:d1327b1c-416a-4135-aab6-1491ee7f8037(LEAD.structure)/1009309199371289097");
    b.version(2);
    b.aggregate("select", 0xe01c95e890f4234L).target(0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0xe01c95e890f4230L).optional(false).ordered(true).multiple(false).origin("1009309199371289140").done();
    b.aggregate("enrich", 0xe01c95e890f423aL).target(0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0xe01c95e890f4231L).optional(true).ordered(true).multiple(false).origin("1009309199371289146").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LEAD", "Select", 0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0xe01c95e890f4230L);
    b.class_(false, false, false);
    b.origin("r:d1327b1c-416a-4135-aab6-1491ee7f8037(LEAD.structure)/1009309199371289136");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStreamDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LEAD", "StreamDefinition", 0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0xe01c95e890f4232L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d1327b1c-416a-4135-aab6-1491ee7f8037(LEAD.structure)/1009309199371289138");
    b.version(2);
    b.aggregate("body", 0x4d5ca23b0aea484fL).target(0xebf7f592fe9245eeL, 0xaac5a2d99c69cfa1L, 0x4d5ca23b0aeaecdeL).optional(false).ordered(true).multiple(false).origin("5574508813247727695").done();
    return b.create();
  }
}
